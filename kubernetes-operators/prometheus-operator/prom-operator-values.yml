alertmanager:
  enabled: true
  ingress:
    enabled: true
    hosts: ["alertmanager.k3s"]
    ingressClassName: "nginx"
  alertmanagerSpec:
    retention: "8h"
    alertmanagerConfigSelector:
      matchLabels:
        release: "prom-operator"
    alertmanagerConfigMatcherStrategy:
      type: "None"
    storage:
      volumeClaimTemplate:
        spec:
          accessModes: ["ReadWriteOnce"]
          storageClassName: "local-path"
          resources:
            requests:
              storage: "512Mi"

prometheus:
  enabled: true
  ingress:
    enabled: true
    hosts: ["prometheus.k3s"]
    ingressClassName: "nginx"
  prometheusSpec:
    retention: "7d"
    resources:
      requests:
        cpu: "100m"
        memory: "700Mi"
      limits:
        cpu: "200m"
        memory: "850Mi"
    storageSpec:
      volumeClaimTemplate:
        spec:
          accessModes: ["ReadWriteOnce"]
          storageClassName: "local-path"
          resources:
            requests:
              storage: "8Gi"

# Using default values from https://github.com/grafana/helm-charts/blob/main/charts/grafana/values.yaml
grafana:
  enabled: true
  adminPassword: "prom-operator"
  deploymentStrategy:
    type: "Recreate"
  additionalDataSources:
    - name: "Loki"
      type: "loki"
      access: "proxy"
      url: "http://loki.monitoring.svc:3100"
      jsonData:
        timeout: 300
        maxLines: 2000
  ingress:
    enabled: true
    hosts: ["grafana.k3s"]
    ingressClassName: "nginx"
    annotations:
      cert-manager.io/cluster-issuer: "k8s-cluster-issuer"
      nginx.ingress.kubernetes.io/ssl-redirect: "true"
    tls:
      - secretName: "prom-grafana-tls"
        hosts: ["grafana.k3s"]
  persistence:
    enabled: true
    type: "pvc"
    size: "1Gi"
    accessModes: ["ReadWriteOnce"]
    storageClassName: "local-path"

defaultRules:
  create: true
  rules:
    alertmanager: true
    etcd: false
    configReloaders: true
    general: true
    k8s: true
    kubeApiserverAvailability: true
    kubeApiserverBurnrate: true
    kubeApiserverHistogram: true
    kubeApiserverSlos: true
    kubeControllerManager: false
    kubelet: true
    kubeProxy: false
    kubePrometheusGeneral: true
    kubePrometheusNodeRecording: false
    kubernetesApps: true
    kubernetesResources: true
    kubernetesStorage: true
    kubernetesSystem: true
    kubeSchedulerAlerting: false
    kubeSchedulerRecording: false
    kubeStateMetrics: true
    network: true
    node: true
    nodeExporterAlerting: true
    nodeExporterRecording: false
    prometheus: true
    prometheusOperator: true
    windows: false
